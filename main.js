(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{hi:()=>K,$z:()=>ee,ON:()=>Q,L1:()=>ne,lH:()=>G,Ph:()=>Z,Kc:()=>te,eY:()=>Y});var t={inputSelector:".form__input",submitButtonSelector:".button_type_submit",inactiveButtonClass:"button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"},n=document.querySelector(".button_type_edit"),r=document.querySelector(".button_type_add"),o=document.querySelector(".profile__avatar-overlay");function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.authToken=t.headers.authorization}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:{authorization:this.authToken}}).then(this._getResponseData)}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:{authorization:this.authToken}}).then(this._getResponseData)}},{key:"sendNewCardInfo",value:function(e,t){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:{authorization:this.authToken,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})}).then(this._getResponseData)}},{key:"sendUserInfo",value:function(e,t){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this.authToken,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})}).then(this._getResponseData)}},{key:"sendUserAvatar",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this.authToken,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then(this._getResponseData)}},{key:"sendСardDeleteRequest",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this.authToken}}).then(this._getResponseData)}},{key:"sendSetLikeRequest",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:{authorization:this.authToken}}).then(this._getResponseData)}},{key:"sendRemoveLikeRequest",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:{authorization:this.authToken}}).then(this._getResponseData)}},{key:"changeLikeCardStatus",value:function(e,t){return fetch("".concat(this.baseUrl,"/cards/").concat(e,"/likes"),{method:t?"DELETE":"PUT",headers:{authorization:this.authToken}}).then(this._getResponseData)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardData=t.cardData,this._template=document.querySelector(t.templateSelector),this._myId=t.myId,this._handleOnCardClick=t.handleOnCardClick,this._handleDeleteBtnClick=t.handleDeleteBtnClick,this._handleLikeCard=t.handleLikeCard}var t,n;return t=e,(n=[{key:"_setLikeBtnStateWithCounts",value:function(e,t){e?(this._isCardLikedByMe=!0,this._currentCardLikeBtn.classList.add("button_active")):(this._isCardLikedByMe=!1,this._currentCardLikeBtn.classList.remove("button_active")),this._currentCardLikeCounterEl.textContent=t}},{key:"_deleteDomElement",value:function(){this._currentElement.remove(),this._currentElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._currentCardPicture.addEventListener("click",(function(){return e._handleOnCardClick(e._cardData.name,e._cardData.link)})),this._currentCardDeleteButton.addEventListener("click",(function(){e._handleDeleteBtnClick(e._cardData._id,e._deleteDomElement.bind(e))})),this._currentCardLikeBtn.addEventListener("click",(function(){e._handleLikeCard(e._isCardLikedByMe,e._cardData._id,e._setLikeBtnStateWithCounts.bind(e))}))}},{key:"createElementNode",value:function(){var e=this;return this._currentElement=this._template.content.querySelector(".element").cloneNode(!0),this._currentCardName=this._currentElement.querySelector(".element__caption"),this._currentCardName.textContent=this._cardData.name,this._currentCardPicture=this._currentElement.querySelector(".element__image"),this._currentCardPicture.alt=this._cardData.name,this._currentCardPicture.src=this._cardData.link,this._currentCardLikeBtn=this._currentElement.querySelector(".button_type_like"),this._currentCardLikeCounterEl=this._currentElement.querySelector(".element__like-count"),this._isCardLikedByMe=this._cardData.likes.some((function(t){return t._id==e._myId})),this._isCardLikedByMe?this._setLikeBtnStateWithCounts(!0,this._cardData.likes.length):this._setLikeBtnStateWithCounts(!1,this._cardData.likes.length),this._currentCardDeleteButton=this._currentElement.querySelector(".button_type_delete"),this._cardData.owner._id!==this._myId&&this._currentCardDeleteButton.classList.add("button_hidden"),this._setEventListeners(),this._currentElement}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),s=function(e,t){G.open(e,t)},l=function(e,t){ee.open(),ee.keepCurrentCardOptions(e,t)},f=function(e,t,n){K.changeLikeCardStatus(t,e).then((function(t){n(!e,t.likes.length)})).catch((function(e){console.log("Ошибка api changeLikeCardStatus: ".concat(e))}))},p=function(e,t){return new c({cardData:e,templateSelector:".template_type_card",myId:t,handleOnCardClick:s,handleDeleteBtnClick:l,handleLikeCard:f}).createElementNode()};function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t,n){return t&&d(e.prototype,t),n&&d(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var _=h((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),y(this,"_showInputError",(function(e,t){r._errorElement=r._form.querySelector("#".concat(e.id,"-error")),e.classList.add(r._validationConfig.inputErrorClass),r._errorElement.classList.add(r._validationConfig.errorClass),r._errorElement.textContent=t})),y(this,"_hideInputError",(function(e){r._errorElement=r._form.querySelector("#".concat(e.id,"-error")),e.classList.remove(r._validationConfig.inputErrorClass),r._errorElement.classList.remove(r._validationConfig.errorClass),r._errorElement.textContent=""})),y(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),y(this,"_handleInput",(function(e){r._checkInputValidity(e),r.setSubmitBtnState()})),y(this,"_setEventListeners",(function(){r._inputList=Array.from(r._form.querySelectorAll(r._validationConfig.inputSelector)),r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._handleInput(e)}))}))})),y(this,"clearErrorMessages",(function(){r._inputList.forEach((function(e){r._hideInputError(e)}))})),y(this,"setSubmitBtnState",(function(){r._form.checkValidity()?(r._submitBtn.removeAttribute("disabled"),r._submitBtn.classList.remove(r._validationConfig.inactiveButtonClass)):(r._submitBtn.setAttribute("disabled",!0),r._submitBtn.classList.add(r._validationConfig.inactiveButtonClass))})),y(this,"enableValidation",(function(){r._setEventListeners()})),this._validationConfig=t,this._form=n,this._submitBtn=this._form.querySelector(this._validationConfig.submitButtonSelector)}));function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t.renderer,this._container=document.querySelector(t.containerSelector)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e,t){var n=this;e.forEach((function(e){return n._renderer(e,t)}))}},{key:"addItemAfterLastOne",value:function(e){this._container.append(e)}},{key:"addItemBeforeFirstOne",value:function(e){this._container.prepend(e)}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var g=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handlePopupOverlayClick",value:function(e){e.currentTarget==e.target&&this.close()}},{key:"_handlePopubCloseBtnClick",value:function(){this.close()}},{key:"setEventListeners",value:function(){this._popup.querySelector(".button_type_close").addEventListener("click",this._handlePopubCloseBtnClick.bind(this)),this._popup.addEventListener("click",this._handlePopupOverlayClick.bind(this))}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function S(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e)).imgPopupImageElement=t._popup.querySelector(".popup__image"),t.imgPopupCaption=t._popup.querySelector(".popup__image-caption"),t}return t=a,(n=[{key:"open",value:function(e,t){this.imgPopupImageElement.alt=e,this.imgPopupImageElement.src=t,this.imgPopupCaption.textContent=e,E(L(a.prototype),"open",this).call(this)}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=I(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},D.apply(this,arguments)}function I(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function T(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e)).submitFormFunction=t,n.form=n._popup.querySelector(".form"),n._inputList=n.form.querySelectorAll(".form__input"),n._closeButton=n._popup.querySelector(".button_type_close"),n._submitButton=n.form.querySelector(".button_type_submit"),n._submitButtonOriginalText=n._submitButton.textContent,n}return t=a,(n=[{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._submitButtonOriginalText}},{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.id]=t.value})),e}},{key:"_handleSubmitEvent",value:function(e){e.preventDefault(),this.submitFormFunction(this._getInputValues())}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"setEventListeners",value:function(){D(q(a.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",this._handleSubmitEvent.bind(this))}},{key:"close",value:function(){D(q(a.prototype),"close",this).call(this),this.form.reset()}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=z(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},N.apply(this,arguments)}function z(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=F(e)););return e}function V(e,t){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},V(e,t)}function M(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function F(e){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},F(e)}var W=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=F(r);if(o){var n=F(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return M(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleConfirm=t,n.form=n._popup.querySelector(".form"),n._submitButton=n._popup.querySelector(".button_type_submit"),n._submitButtonOriginalText=n._submitButton.textContent,n}return t=a,(n=[{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._submitButtonOriginalText}},{key:"_handleSubmitEvent",value:function(e){e.preventDefault(),this._handleConfirm(this.cardId,this.deleteCurrentDomElement)}},{key:"keepCurrentCardOptions",value:function(e,t){this.cardId=e,this.deleteCurrentDomElement=t}},{key:"deleteCurrentCardOptions",value:function(){this.cardId=null,this.deleteCurrentDomElement=null}},{key:"setEventListeners",value:function(){N(F(a.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",this._handleSubmitEvent.bind(this))}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t){var n=t.profileNameSelector,r=t.profileAboutSelector,o=t.profileAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileNameEl=document.querySelector(n),this._profileAboutEl=document.querySelector(r),this.profileAvatarEl=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){var e={};return e.profileName=this._profileNameEl.textContent,e.profileAbout=this._profileAboutEl.textContent,e}},{key:"setUserAvatar",value:function(e){this.profileAvatarEl.src=e}},{key:"setUserInfo",value:function(e,t){this._profileNameEl.textContent=e,this._profileAboutEl.textContent=t}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var K=new a({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-55",headers:{authorization:"8abcd093-addb-4bd1-b00f-f600aa41c00a","Content-Type":"application/json"}}),Y=new J({profileNameSelector:".profile__name",profileAboutSelector:".profile__about",profileAvatarSelector:".profile__avatar"}),G=new P(".popup_type_image");G.setEventListeners();var Q=new A(".popup_type_new-card",(function(e){var t=e["form__input_type_place-name"],n=e["form__input_type_image-link"];Q.renderLoading(!0),K.sendNewCardInfo(t,n).then((function(e){var t=p(e,e.owner._id);oe.addItemBeforeFirstOne(t),Q.close()})).catch((function(e){console.log("Ошибка api sendNewCardInfo: ".concat(e))})).finally((function(){Q.renderLoading(!1)}))}));Q.setEventListeners();var X=new A(".popup_type_new-avatar",(function(e){var t=e["form__input_type_avatar-link"];X.renderLoading(!0),K.sendUserAvatar(t).then((function(e){Y.setUserAvatar(e.avatar),X.close()})).catch((function(e){console.log("Ошибка api sendUserAvatar: ".concat(e))})).finally((function(){X.renderLoading(!1)}))}));X.setEventListeners();var Z=new A(".popup_type_profile",(function(e){Z.renderLoading(!0),K.sendUserInfo(e["form__input_type_profile-name"],e["form__input_type_profile-about"]).then((function(e){return Y.setUserInfo(e.name,e.about),Z.close(),e})).catch((function(e){console.log("Ошибка api sendUserInfo: ".concat(e))})).finally((function(){Z.renderLoading(!1)}))}));Z.setEventListeners();var ee=new W(".popup_type_confirmation",(function(e,t){ee.renderLoading(!0),K["sendСardDeleteRequest"](e).then((function(){t(),ee.close()})).catch((function(e){console.log("Ошибка api sendСardDeleteRequest: ".concat(e))})).finally((function(){ee.renderLoading(!1),ee.deleteCurrentCardOptions()}))}));ee.setEventListeners();var te=new _(t,Z.form),ne=new _(t,Q.form),re=new _(t,X.form);te.enableValidation(),ne.enableValidation(),re.enableValidation(),n.addEventListener("click",(function(){var e=Y.getUserInfo();Z.setInputValues(e),te.clearErrorMessages(),te.setSubmitBtnState(),Z.open()})),r.addEventListener("click",(function(){te.clearErrorMessages(),ne.setSubmitBtnState(),Q.open()})),o.addEventListener("click",(function(e){X.open(),re.setSubmitBtnState()}));var oe=new m({renderer:function(e,t){var n=p(e,t);oe.addItemAfterLastOne(n)},containerSelector:".elements__list"});Promise.all([K.getUserInfo(),K.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];return Y.setUserInfo(o.name,o.about),Y.setUserAvatar(o.avatar),oe.renderItems(i,o._id),o})).catch((function(e){console.log("Ошибка api промиса из promise.all: ".concat(e))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,